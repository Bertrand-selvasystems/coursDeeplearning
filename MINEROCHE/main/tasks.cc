/////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////// DEFINITION DES BIBLIOTHEQUES
/////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////
#include "tasks.h"

#include "constantes.h"
#include "neurone.h"

/////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////// DECLARATION DES VARIABLES STATIQUE
/////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////

/////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////// DECLARATION DES FONCTIONS
/////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////
// Tâche FreeRTOS pour contrôler les LEDs
void led_task(void *pvParameter) {
  // Initialisation de la LED
  led_init();

  while (1) {
    led_set_color(0, 0, 0, 0);
    led_refresh();
    // Délai pour éviter les changements trop rapides
    vTaskDelay(pdMS_TO_TICKS(520));

    led_set_color(0, 0, 255, 0);
    led_refresh();
    // Délai pour éviter les changements trop rapides
    vTaskDelay(pdMS_TO_TICKS(520));
  }
}
